{"version":3,"sources":["components/modal.jsx","components/pages/Culture.jsx","components/Difficult.jsx","challenge.js","components/CardRegion.jsx","components/CardChallenge.jsx","components/Answers.jsx","components/Questions.jsx","regions.js","components/Register.jsx","components/ResultQuiz.jsx","components/pages/Quiz.jsx","gameType.js","components/HomeCard.jsx","components/CardQuizRapid.jsx","components/CardCultureHome.jsx","logo/logo.svg","components/Logo.jsx","components/pages/Home.jsx","components/MemoryCard.jsx","components/MemoryGrid.jsx","components/pages/Memory.jsx","components/pages/Classements.jsx","components/Help.jsx","components/Login.jsx","components/SignUp.jsx","components/Profil.jsx","components/Header.jsx","components/pages/QuizRapid.jsx","App.jsx","index.js"],"names":["Modal","children","openModal","hideModal","className","role","onClick","Culture","setShowPresentation","useState","playOnce","setPlayOnce","allCountries","setAllCountries","searchCountry","setSearchCountry","setOpenModal","useEffect","axios","get","then","response","data","catch","err","console","log","showModal","id","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","filter","country","name","includes","toLowerCase","translations","fr","map","onKeyDown","src","flag","alt","region","capital","population","currencies","symbol","area","Difficult","setDifficult","htmlFor","defaultChecked","challenge","nameRegion","image","Card","regions","setRegionSwitch","setIsHidden","handleValid","setChallengeSwitch","Answers","nextQuestion","challengeSwitch","setResultAnswer","project","Questions","nbQuestion","arrayLength","setResultQuestion","Register","timer","setIsHiddenRegister","isHiddenRegister","handleCloseRegister","regionSwitch","total","user","setUser","post","pseudo","score","hour","minute","sec","game","defaultProps","ResultQuiz","showResponse","filterCorrection","setFilterCorrection","showCorrection","setShowCorrection","insensibleCasse","toUpperCase","slice","showResultFinal","el","undefined","elem","answer","translation","Quiz","setData","sortedData","setSortedData","sliceVal1","setSliceVal1","sliceVal2","setSliceVal2","countQuestion","setCountQuestion","isHidden","setTotal","resultAnswer","resultQuestion","capitalQuestion","setCapitalQuestion","setShowResponse","difficult","length","res","sortedArray","Object","keys","i","sort","a","b","sortedCountry","answerRandom","array","array2","j","Math","floor","random","temp","shuffleArray","result","CardRegion","CardChallenge","gameType","HomeCard","CardQuizRapid","CardCultureHome","Logo","logo","Home","showPresentation","onMouseUp","to","MemoryCard","MemoryGrid","flagArray2","visibleItems","finishedItems","setVisibleItems","checkItems","setStartTimer","index","concat","Memory","flagArray","setFlagArray","setFlagArray2","setFinishedItems","setTimer","startTimer","winner","setWinner","playMemoryDifficult","setPlayMemoryDifficult","limitFlag","countryObj","push","useInterval","setInterval","clearInterval","firstIndex","secondIndex","setTimeout","exact","Classements","dataBase","setDataBase","challengeFilter","setChallengeFilter","regionFilter","setRegionFilter","pseudoFilter","setPseudoFilter","scoreFilter","setScoreFilter","selectGame","setSelectGame","url","Help","content","userConnected","Login","searchUser","setSearchUser","setShowLogin","showLogin","dataUsers","setDataUsers","error","setError","dataLogin","setDataLogin","dataPassword","setDataPassword","inpt1","inpt2","hoverLog","setHoverLog","foundUser","find","password","withCredentials","login","onBlur","onFocus","autoComplete","required","signup","setPseudo","mail","setMail","setPassword","confirmPassword","setConfirmPassword","errorPseudo","errorMail","inpt3","inpt4","hover","setHover","Profil","handleLogOut","Header","profil","setUserConnected","errorGetData","setErrorGetData","status","SignUp","activeClassName","QuizRapid","randomNumber","App","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.736e5615.chunk.js","sourcesContent":["import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport './modal.css';\n\nconst Modal = ({ children, openModal, hideModal }) => {\n  return (\n    <div>\n      <div\n        className=\"modalBackground\"\n        role=\"button\"\n        aria-hidden=\"true\"\n        onClick={() => hideModal()}\n      />\n      <div className={openModal ? 'modalContainer' : 'modalContainer isHidden'}>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nModal.propTypes = {\n  children: PropTypes.arrayOf(PropTypes.object).isRequired,\n  openModal: PropTypes.string.isRequired,\n  hideModal: PropTypes.func.isRequired,\n};\n\nexport default Modal;\n","import axios from 'axios';\nimport PropTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\nimport './culture.css';\nimport Modal from '../modal';\n\nconst Culture = ({ setShowPresentation }) => {\n  const [playOnce, setPlayOnce] = useState(true);\n  const [allCountries, setAllCountries] = useState([]);\n  const [searchCountry, setSearchCountry] = useState('');\n  const [openModal, setOpenModal] = useState('');\n\n  useEffect(() => {\n    setShowPresentation(false);\n  }, []);\n\n  /* Appel API */\n  useEffect(() => {\n    if (playOnce) {\n      axios\n        .get(`https://restcountries.com/v2/all`)\n        .then((response) => response.data)\n        .then((data) => {\n          setAllCountries(data);\n          setPlayOnce(false);\n        })\n        .catch((err) => console.log(err));\n    }\n  }, [allCountries]);\n\n  /* Modal */\n  const showModal = (id) => {\n    setOpenModal(id);\n  };\n  const hideModal = () => {\n    setOpenModal('');\n  };\n\n  return (\n    <div>\n      <div className=\"cultureBody\">\n        <h1>Chercher un pays :</h1>\n        <form className=\"cultureForm\" onSubmit={(e) => e.preventDefault()}>\n          <input\n            className=\"cultureSearch\"\n            type=\"text\"\n            placeholder=\"Entrez le nom d'un pays\"\n            value={searchCountry}\n            onChange={(e) => setSearchCountry(e.target.value)}\n          />\n        </form>\n        <div className=\"cultureFilter\">\n          {allCountries\n            .filter((country) =>\n              searchCountry\n                ? country.name.includes(searchCountry.toLowerCase()) ||\n                  country.translations.fr\n                    .toLowerCase()\n                    .includes(searchCountry.toLowerCase())\n                : country\n            )\n            .map((country) => {\n              return (\n                <div key={country.name}>\n                  <div className=\"cultureFlag\">\n                    <img\n                      onClick={() => showModal(country.name)}\n                      onKeyDown={() => showModal()}\n                      aria-hidden=\"true\"\n                      id=\"cultureFlags\"\n                      src={country.flag}\n                      alt={country.name}\n                    />\n                  </div>\n                  {country.name === openModal && (\n                    <Modal\n                      openModal={openModal}\n                      showModal={showModal}\n                      hideModal={hideModal}\n                    >\n                      <div className=\"modalHeader\">\n                        <img\n                          id=\"modalFlag\"\n                          src={country.flag}\n                          alt={country.flag}\n                        />\n                        Pays: <h2>{country.translations.fr}</h2>\n                      </div>\n                      <div className=\"modalInfoOne\">\n                        Continent : <h2>{country.region}</h2>\n                        Capitale :\n                        <h2>\n                          {country.capital} <br />\n                        </h2>\n                        Population :\n                        <h2>\n                          {country.population} habitants <br />\n                        </h2>\n                      </div>\n                      <div className=\"modalInfoTwo\">\n                        Monnaie :\n                        <h2>\n                          {country.currencies\n                            ? country.currencies[0].name\n                            : ' Inconnu'}\n                          <br />\n                        </h2>\n                        Symbole monnaie :\n                        <h2>\n                          {country.currencies\n                            ? country.currencies[0].symbol\n                            : ' Inconnu'}\n                          <br />\n                        </h2>\n                        Aire : <h2>{country.area} km²</h2>\n                      </div>\n                      <div className=\"modalFooter\">\n                        <button\n                          type=\"button\"\n                          className=\"modalBtn\"\n                          onClick={hideModal}\n                        >\n                          Fermer\n                        </button>\n                      </div>\n                    </Modal>\n                  )}\n                </div>\n              );\n            })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nCulture.propTypes = {\n  setShowPresentation: PropTypes.func.isRequired,\n};\n\nexport default Culture;\n","import PropTypes from 'prop-types';\nimport './difficult.css';\n\nconst Difficult = ({ setDifficult }) => {\n  return (\n    <div className=\"checkDifficult\">\n      <h2>Difficulty</h2>\n      <form>\n        <div\n          className=\"checkBox\"\n          onChange={(e) => setDifficult(e.target.value)}\n        >\n          <label htmlFor=\"easy\">\n            <input\n              type=\"radio\"\n              name=\"difficult\"\n              className=\"radioDifficult\"\n              id=\"easy\"\n              value=\"easy\"\n            />\n            Easy\n          </label>\n          <label htmlFor=\"medium\">\n            <input\n              type=\"radio\"\n              name=\"difficult\"\n              className=\"radioDifficult\"\n              id=\"medium\"\n              value=\"medium\"\n              defaultChecked\n            />\n            Medium\n          </label>\n          <label htmlFor=\"hard\">\n            <input\n              type=\"radio\"\n              name=\"difficult\"\n              className=\"radioDifficult\"\n              id=\"hard\"\n              value=\"hard\"\n            />\n            Hard\n          </label>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nDifficult.propTypes = {\n  setDifficult: PropTypes.func.isRequired,\n};\n\nexport default Difficult;\n","const challenge = [\n  {\n    nameRegion: 'Capital',\n    image: '/assets/capital.png',\n  },\n  {\n    nameRegion: 'Drapeaux',\n    image: '/assets/drapeaux.png',\n  },\n];\n\nexport default challenge;\n","import PropTypes from 'prop-types';\nimport './card.css';\n\nconst Card = ({ regions, setRegionSwitch, setIsHidden }) => {\n  const handleValid = () => {\n    setIsHidden('challenge');\n    setRegionSwitch(regions.nameRegion); // je selectionne mon continent et affiche les challenges\n  };\n\n  return (\n    <div\n      className=\"card\"\n      onClick={handleValid}\n      onKeyDown={handleValid}\n      aria-hidden=\"true\"\n    >\n      <h2>{regions.nameRegion}</h2>\n      <img src={regions.image} alt={regions.nameRegion} />\n    </div>\n  );\n};\n\nCard.propTypes = {\n  regions: PropTypes.oneOfType([PropTypes.object]).isRequired,\n  setRegionSwitch: PropTypes.func.isRequired,\n  setIsHidden: PropTypes.func.isRequired,\n};\n\nexport default Card;\n","import PropTypes from 'prop-types';\nimport './card.css';\n\nconst Card = ({ challenge, setChallengeSwitch, setIsHidden }) => {\n  const handleValid = () => {\n    setIsHidden('quiz');\n    setChallengeSwitch(challenge.nameRegion); // je selectionne mon challenge et affiche le quiz\n  };\n\n  return (\n    <div\n      className=\"card\"\n      onClick={handleValid}\n      onKeyDown={handleValid}\n      aria-hidden=\"true\"\n    >\n      <h2>{challenge.nameRegion}</h2>\n      <div className=\"imgQuiz\">\n        <img src={challenge.image} alt={challenge.nameRegion} />\n      </div>\n    </div>\n  );\n};\n\nCard.propTypes = {\n  challenge: PropTypes.oneOfType([PropTypes.object]).isRequired,\n  setChallengeSwitch: PropTypes.func.isRequired,\n  setIsHidden: PropTypes.func.isRequired,\n};\n\nexport default Card;\n","import PropTypes from 'prop-types';\nimport './answers.css';\n\nconst Answers = ({\n  country,\n  nextQuestion,\n  challengeSwitch,\n  setResultAnswer,\n}) => {\n  const project = () => {\n    // j'affiche les réponses en fonction du challenge choisi\n    switch (challengeSwitch) {\n      case 'Capital':\n        return country.capital;\n      case 'Drapeaux':\n        return <img src={country.flag} alt={country.name} id=\"flagAnswer\" />;\n\n      default:\n        return <h1>No project match</h1>;\n    }\n  };\n\n  return (\n    <li className=\"button\">\n      <button\n        onClick={(e) => {\n          nextQuestion();\n          return challengeSwitch === 'Drapeaux'\n            ? setResultAnswer(e.target.src)\n            : setResultAnswer(e.target.value);\n        }}\n        type=\"button\"\n        value={country.capital}\n      >\n        {project()}\n      </button>\n    </li>\n  );\n};\n\nAnswers.propTypes = {\n  country: PropTypes.PropTypes.oneOfType([PropTypes.object]).isRequired,\n  nextQuestion: PropTypes.func.isRequired,\n  challengeSwitch: PropTypes.string.isRequired,\n  setResultAnswer: PropTypes.func.isRequired,\n};\n\nexport default Answers;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport './questions.css';\n\nconst Questions = ({\n  country,\n  nbQuestion,\n  arrayLength,\n  challengeSwitch,\n  setResultQuestion,\n}) => {\n  useEffect(() => {\n    setResultQuestion(country);\n  }, []);\n\n  return (\n    <li className=\"questions\">\n      <div className=\"text\">\n        <h3>\n          Questions {nbQuestion + 1}/{arrayLength - 3}\n        </h3>\n        <p>\n          What is the {challengeSwitch === 'Drapeaux' ? 'flag' : 'capital'} of{' '}\n          {country.name} ?\n        </p>\n      </div>\n\n      <div className=\"img\">\n        {\n          challengeSwitch !== 'Drapeaux' && (\n            <img src={country.flag} alt={country.name} />\n          ) // j'ajoute une balise img si le challenge est porté sur les drapeaux\n        }\n      </div>\n    </li>\n  );\n};\n\nQuestions.propTypes = {\n  country: PropTypes.oneOfType([PropTypes.object]).isRequired,\n  nbQuestion: PropTypes.number.isRequired,\n  arrayLength: PropTypes.number.isRequired,\n  challengeSwitch: PropTypes.string.isRequired,\n  setResultQuestion: PropTypes.func.isRequired,\n};\n\nexport default Questions;\n","const regions = [\n  {\n    nameRegion: 'Monde',\n    image: '/assets/monde.png',\n  },\n  {\n    nameRegion: 'Africa',\n    image: '/assets/africa.png',\n  },\n  {\n    nameRegion: 'America',\n    image: '/assets/america.png',\n  },\n  {\n    nameRegion: 'Asia',\n    image: '/assets/asia.png',\n  },\n  {\n    nameRegion: 'Europe',\n    image: '/assets/europa.png',\n  },\n  {\n    nameRegion: 'Oceania',\n    image: '/assets/oceania.png',\n  },\n];\n\nexport default regions;\n","import axios from 'axios';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport './register.css';\n\nconst Register = ({\n  timer,\n  setIsHiddenRegister,\n  isHiddenRegister = false,\n  handleCloseRegister,\n  regionSwitch,\n  challengeSwitch,\n  total,\n}) => {\n  const [user, setUser] = useState(''); // permet d'enregistrer un user\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // Je submit le formulaire et envoi les data à l'api\n    axios.post('/api/users', {\n      pseudo: user,\n      score: total || timer.hour + timer.minute + timer.sec,\n      game: challengeSwitch || 'NC',\n      region: regionSwitch || 'NC',\n    });\n    setIsHiddenRegister(true);\n  };\n\n  return (\n    <div\n      className={\n        isHiddenRegister\n          ? 'isHiddenDown registerModal '\n          : ' showRegister registerModal'\n      }\n    >\n      <form className=\"userFormRegister\" onSubmit={handleSubmit}>\n        <h2>Register your score</h2>\n        <label htmlFor=\"users\">\n          <input\n            placeholder=\"Enter your Username...\"\n            className=\"inpt\"\n            type=\"text\"\n            onChange={(e) => setUser(e.target.value)}\n          />\n        </label>\n        <button className=\"btn\" type=\"submit\">\n          Register\n        </button>\n      </form>\n      <button className=\"noThanks\" type=\"button\" onClick={handleCloseRegister}>\n        No thanks\n      </button>\n    </div>\n  );\n};\n\nRegister.propTypes = {\n  total: PropTypes.number,\n  timer: PropTypes.arrayOf(PropTypes.object),\n  setIsHiddenRegister: PropTypes.func.isRequired,\n  isHiddenRegister: PropTypes.bool.isRequired,\n  handleCloseRegister: PropTypes.func.isRequired,\n  regionSwitch: PropTypes.string,\n  challengeSwitch: PropTypes.string,\n};\n\nRegister.defaultProps = {\n  timer: [],\n  total: 0,\n  regionSwitch: '',\n  challengeSwitch: '',\n};\n\nexport default Register;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './resultquiz.css';\nimport Register from './Register';\n\nconst ResultQuiz = ({ total, showResponse, challengeSwitch, regionSwitch }) => {\n  const [filterCorrection, setFilterCorrection] = useState(''); // récupère la valeur de l'input\n  const [showCorrection, setShowCorrection] = useState(false); // permet d'afficher ou non la correction\n  const [isHiddenRegister, setIsHiddenRegister] = useState(false); // affiche ou non le modal pour s'enregistrer\n  let insensibleCasse = '';\n\n  if (filterCorrection) {\n    insensibleCasse =\n      filterCorrection[0].toUpperCase() + filterCorrection.slice(1); // je rend le formulaire insensible à la casse\n  }\n\n  const showResultFinal = showResponse.filter((el) => el.name !== undefined); // j'élimine les corrections qui pourrait être undefined\n\n  const handleCloseRegister = () => {\n    setIsHiddenRegister(!isHiddenRegister);\n  };\n\n  return (\n    <div className=\"resultQuiz\">\n      <h5>Votre score est de : {total} </h5>\n      <button className=\"noThanks\" type=\"button\" onClick={handleCloseRegister}>\n        {isHiddenRegister ? 'Register my Score' : 'Not register my score'}\n      </button>\n      <button\n        id=\"btnCorrection\"\n        className=\"btn\"\n        type=\"button\"\n        onClick={() => setShowCorrection(!showCorrection)}\n      >\n        {showCorrection ? 'Hide' : 'Show'} Correction\n      </button>\n      <label\n        className={\n          showCorrection ? 'labelCorrection' : 'labelCorrection isHidden'\n        }\n        htmlFor=\"filterCorrection\"\n      >\n        Search an answer\n        <input\n          id=\"filterCorrection\"\n          className=\"inpt\"\n          type=\"text\"\n          placeholder=\"Search your question ( by name country, name capital)\"\n          onChange={(e) => setFilterCorrection(e.target.value)}\n        />\n      </label>\n      {showResultFinal\n        .filter((elem) =>\n          filterCorrection\n            ? elem.name.includes(insensibleCasse) ||\n              elem.answer.includes(insensibleCasse) ||\n              elem.translation.fr.includes(insensibleCasse)\n            : elem\n        )\n        .map((el) => (\n          <div\n            key={el.name}\n            className={\n              showCorrection ? 'gridResultQuiz' : 'gridResultQuiz isHidden'\n            }\n          >\n            <p>Question was:</p>\n            <p>\n              What is the {challengeSwitch === 'Drapeaux' ? 'flag' : 'capital'}{' '}\n              of : <strong>{el.name}</strong>\n            </p>\n            <p>Your answer:</p>\n            <p>\n              {' '}\n              {challengeSwitch === 'Drapeaux' ? (\n                <img id=\"flagAnswer\" src={el.answer} alt={el.name} />\n              ) : (\n                el.answer\n              )}\n            </p>\n            <p>Good answer:</p>\n            <p>\n              {challengeSwitch === 'Drapeaux' ? (\n                <img id=\"flagAnswer\" src={el.flag} alt={el.name} />\n              ) : (\n                el.capital\n              )}\n            </p>\n          </div>\n        ))}\n      <Register\n        total={total}\n        isHiddenRegister={isHiddenRegister}\n        setIsHiddenRegister={setIsHiddenRegister}\n        handleCloseRegister={handleCloseRegister}\n        regionSwitch={regionSwitch}\n        challengeSwitch={challengeSwitch}\n      />\n    </div>\n  );\n};\n\nResultQuiz.propTypes = {\n  total: PropTypes.number.isRequired,\n  showResponse: PropTypes.arrayOf(PropTypes.object).isRequired,\n  challengeSwitch: PropTypes.string.isRequired,\n  regionSwitch: PropTypes.string,\n};\n\nResultQuiz.defaultProps = {\n  regionSwitch: 'Monde',\n};\n\nexport default ResultQuiz;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport Difficult from '../Difficult';\nimport challenge from '../../challenge';\nimport CardRegion from '../CardRegion';\nimport CardChallenge from '../CardChallenge';\nimport Answers from '../Answers';\nimport Questions from '../Questions';\nimport regions from '../../regions';\nimport './quiz.css';\nimport ResultQuiz from '../ResultQuiz';\n\nconst Quiz = ({ setShowPresentation }) => {\n  const [data, setData] = useState([]); // recupère le premier tableau de l'appel api\n  const [playOnce, setPlayOnce] = useState(true); // gere l'appel API pour eviter l'appel en boucle\n  const [sortedData, setSortedData] = useState([]); // tableau de l'appel api trié par ordre de population\n  const [sliceVal1, setSliceVal1] = useState(0); // sliceVal1 et 2 incrementent le slice pour me permettre d'afficher les questions une par une\n  const [sliceVal2, setSliceVal2] = useState(1);\n  const [countQuestion, setCountQuestion] = useState(0); // j'enregistre le nombre de question au click pour les afficher\n  const [regionSwitch, setRegionSwitch] = useState(''); // je récupère la valeur du continent ou se déroule le quiz\n  const [challengeSwitch, setChallengeSwitch] = useState(''); // je récupère la valeur du challenge ou se déroule le quiz\n  const [isHidden, setIsHidden] = useState('region'); // permet d'afficher ou non un composant\n  const [total, setTotal] = useState(1); // permet de récupérer le score du jeu\n  const [resultAnswer, setResultAnswer] = useState([]); // affiche la réponse selectionné\n  const [resultQuestion, setResultQuestion] = useState([]); // affiche l'objet de la question affiché\n  const [capitalQuestion, setCapitalQuestion] = useState(''); // affiche l'objet selectionné de la question\n  const [showResponse, setShowResponse] = useState([]); // récupère un tableau de réponses érronées\n  const [difficult, setDifficult] = useState('medium'); // récupère un tableau de réponses érronées\n  const arrayLength = sortedData.length;\n\n  useEffect(() => {\n    axios.get('http://localhost:8000/login/').then((res) => console.log(res));\n  }, []);\n\n  // Applique un random sur les tableaux en parametre\n  const shuffleArray = (array) => {\n    const array2 = array;\n    for (let i = array2.length - 1; i > 0; i -= 1) {\n      const j = Math.floor(Math.random() * (i + 1));\n      const temp = array2[i];\n      array2[i] = array2[j];\n      array2[j] = temp;\n    }\n    return array2;\n  };\n\n  const sortedCountry = () => {\n    const countryObj = Object.keys(data).map((i) => data[i]);\n    const sortedArray = countryObj\n      .filter((country) =>\n        country.region.includes(regionSwitch !== 'Monde' ? regionSwitch : '')\n      ) // je filtre mon tableau par ordre de population décroissant\n      .sort((a, b) => {\n        // permet d'appliquer une difficultée au jeu\n        return b.population - a.population;\n      });\n\n    if (difficult === 'easy' && regionSwitch === 'Monde') {\n      setSortedData(sortedArray.slice(0, 33));\n    } else if (difficult === 'medium' && regionSwitch === 'Monde') {\n      setSortedData(sortedArray.slice(100, 133));\n    } else if (difficult === 'hard' && regionSwitch === 'Monde') {\n      setSortedData(sortedArray.slice(210, 243));\n    } else {\n      setSortedData(sortedArray);\n    }\n  };\n\n  useEffect(() => {\n    setShowPresentation(false);\n  }, []);\n\n  useEffect(() => {\n    if (playOnce) {\n      axios\n        .get(\n          `https://restcountries.com/v2/all?fields=name,capital,translations,flag,population,region`\n        )\n        .then((res) => {\n          setData(res.data);\n          setPlayOnce(false);\n        });\n    }\n\n    sortedCountry();\n\n    return () => {};\n  }, [data, playOnce, regionSwitch, difficult]);\n\n  const answerRandom = sortedData.slice(sliceVal1, sliceVal2 + 3);\n  shuffleArray(answerRandom);\n\n  const nextQuestion = () => {\n    setCountQuestion(countQuestion + 1);\n    setCapitalQuestion(resultQuestion);\n    if (countQuestion < arrayLength - 4) {\n      // si le nombre de click et inferieure à la lg du tableau - 4, je compare les résultats\n      if (\n        resultAnswer === capitalQuestion.capital ||\n        resultAnswer === capitalQuestion.flag\n      ) {\n        setTotal(total + 1);\n      } else {\n        let result = []; // créer un nouveau tableau que j'ajoute dans mon state showResponse pour afficher la correction\n        result = {\n          name: capitalQuestion.name,\n          translation: capitalQuestion.translations,\n          capital: capitalQuestion.capital,\n          answer: resultAnswer,\n          flag: capitalQuestion.flag,\n        };\n        setShowResponse([...showResponse, result]);\n      }\n      setSliceVal1(sliceVal1 + 1);\n      setSliceVal2(sliceVal2 + 1); // je passe à la question suivante\n    } else {\n      setTotal(total + 1);\n      setIsHidden('result');\n    }\n  };\n\n  return (\n    <div className=\"quizContainer\">\n      <ul className=\"choiceRegions\" id={isHidden === 'region' ? '' : 'hidden'}>\n        {regions.map((region) => (\n          <CardRegion\n            regions={region}\n            key={region.nameRegion}\n            setRegionSwitch={setRegionSwitch}\n            setIsHidden={setIsHidden}\n          />\n        ))}\n      </ul>\n      <ul\n        className=\"choiceChallenge\"\n        id={isHidden === 'challenge' ? '' : 'hidden'}\n      >\n        {challenge.map((el) => (\n          <CardChallenge\n            challenge={el}\n            key={el.nameRegion}\n            setChallengeSwitch={setChallengeSwitch}\n            setIsHidden={setIsHidden}\n          />\n        ))}\n      </ul>\n      <div\n        className=\"containerDifficult\"\n        id={\n          isHidden === 'challenge' && regionSwitch === 'Monde' ? '' : 'hidden'\n        }\n      >\n        <Difficult setDifficult={setDifficult} difficult={difficult} />\n      </div>\n      <div className=\"quizMain\" id={isHidden === 'quiz' ? '' : 'hidden'}>\n        <ul className=\"quizGame\">\n          {sortedData.slice(sliceVal1, sliceVal2).map((country) => (\n            <Questions\n              country={country}\n              key={country.name}\n              nbQuestion={sliceVal1}\n              arrayLength={arrayLength}\n              challengeSwitch={challengeSwitch}\n              setResultQuestion={setResultQuestion}\n            />\n          ))}\n        </ul>\n        <ul className=\"answers\">\n          {answerRandom.map((country) => (\n            <Answers\n              country={country}\n              key={country.name}\n              nextQuestion={nextQuestion}\n              challengeSwitch={challengeSwitch}\n              setResultAnswer={setResultAnswer}\n            />\n          ))}\n        </ul>\n      </div>\n      <div\n        className=\"resultQuizContainer\"\n        id={isHidden === 'result' ? '' : 'hidden'}\n      >\n        <ResultQuiz\n          total={total}\n          key={capitalQuestion.name}\n          showResponse={showResponse}\n          challengeSwitch={challengeSwitch}\n        />\n      </div>\n\n      {/* Button pour changer de continent, de challenge ou pour recommencer le jeu */}\n      <div className=\"restartContainer\">\n        <button\n          className=\"btn\"\n          id={\n            isHidden === 'challenge' ||\n            isHidden === 'quiz' ||\n            isHidden === 'result'\n              ? ''\n              : 'hidden'\n          }\n          type=\"button\"\n          onClick={() => {\n            setShowResponse([]);\n            setTotal(0);\n            setIsHidden('region');\n            setSliceVal1(0);\n            setSliceVal2(1);\n            setCountQuestion(0);\n          }}\n        >\n          Change Region\n        </button>\n        <button\n          className=\"btn\"\n          id={isHidden === 'result' || isHidden === 'quiz' ? '' : 'hidden'}\n          type=\"button\"\n          onClick={() => {\n            setShowResponse([]);\n            setTotal(0);\n            setIsHidden('challenge');\n            setSliceVal1(0);\n            setSliceVal2(1);\n            setCountQuestion(0);\n          }}\n        >\n          Change Challenge\n        </button>\n        <button\n          className=\"btn\"\n          id={isHidden === 'result' || isHidden === 'quiz' ? '' : 'hidden'}\n          type=\"button\"\n          onClick={() => {\n            setShowResponse([]);\n            setTotal(0);\n            setIsHidden('quiz');\n            setSliceVal1(0);\n            setSliceVal2(1);\n            setCountQuestion(0);\n          }}\n        >\n          Restart this Game\n        </button>\n      </div>\n    </div>\n  );\n};\n\nQuiz.propTypes = {\n  setShowPresentation: PropTypes.func.isRequired,\n};\n\nexport default Quiz;\n","const gameType = [\n  {\n    name: 'The Quiz',\n    image: '/assets/homequizimage.png',\n  },\n  {\n    name: 'The memory',\n    image: 'assets/homememoryimage.png',\n  },\n];\nexport default gameType;\n","import PropTypes from 'prop-types';\nimport './homecard.css';\nimport '../gameType';\n\nconst HomeCard = ({ gameType }) => {\n  return (\n    <div className=\"homecard\">\n      <h2>{gameType.name}</h2>\n      <img src={gameType.image} alt={gameType.name} />\n    </div>\n  );\n};\n\nHomeCard.propTypes = {\n  gameType: PropTypes.oneOfType([PropTypes.object]).isRequired,\n};\n\nexport default HomeCard;\n","import React from 'react';\n\nconst CardQuizRapid = () => {\n  return (\n    <div className=\"cardQuizRapid\">\n      <h2>Rapid Quiz</h2>\n      <img src=\"assets/des.png\" alt=\"des\" />\n      <h3>Run a random quiz</h3>\n    </div>\n  );\n};\n\nexport default CardQuizRapid;\n","const CardCultureHome = () => {\n  return (\n    <div className=\"cardCultureHome\">\n      <h2>Culture</h2>\n      <img src=\"assets/livres.png\" alt=\"livres\" />\n      <h3>Review before the quiz</h3>\n    </div>\n  );\n};\n\nexport default CardCultureHome;\n","export default __webpack_public_path__ + \"static/media/logo.225c77b9.svg\";","import './logo.css';\nimport logo from '../logo/logo.svg';\n\nconst Logo = () => {\n  return (\n    <div className=\"logo\">\n      <object type=\"image/svg+xml\" data={logo}>\n        <img src={logo} alt=\"logo\" id=\"logo\" />\n      </object>\n    </div>\n  );\n};\n\nexport default Logo;\n","import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport HomeCard from '../HomeCard';\nimport gameType from '../../gameType';\nimport CardQuizRapid from '../CardQuizRapid';\nimport CardCultureHome from '../CardCultureHome';\nimport './home.css';\nimport Logo from '../Logo';\n\nconst Home = ({ showPresentation, setShowPresentation }) => {\n  return (\n    <div className=\"home\">\n      {showPresentation && (\n        <div className=\"logoPresentation\">\n          <Logo />\n          <button\n            onMouseUp={() => setShowPresentation(false)}\n            type=\"button\"\n            className=\"btnStart\"\n          >\n            Start\n          </button>\n        </div>\n      )}\n      <h1 className=\"homeH1\">Welcome to the World Wild Game</h1>\n      <div className=\"choiceGame\">\n        <div className=\"homeQuizCard\">\n          <Link className=\"linkDiv\" to=\"/quiz\">\n            <HomeCard gameType={gameType[0]} />\n          </Link>\n        </div>\n        <div className=\"homeMemoryCard\">\n          <Link className=\"linkDiv\" to=\"/memory\">\n            <HomeCard gameType={gameType[1]} />\n          </Link>\n        </div>\n        <div className=\"homeQuizRapidCard\">\n          <Link className=\"linkDiv\" to=\"/quizrapid\">\n            <CardQuizRapid />\n          </Link>\n        </div>\n        <div className=\"homeCultureCard\">\n          <Link className=\"linkDiv\" to=\"/culture\">\n            <CardCultureHome />\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nHome.propTypes = {\n  showPresentation: PropTypes.bool.isRequired,\n  setShowPresentation: PropTypes.func.isRequired,\n};\n\nexport default Home;\n","import PropTypes from 'prop-types';\nimport './memoryCard.css';\n\nconst MemoryCard = ({ country, onClick, className }) => {\n  return (\n    <div\n      onClick={onClick}\n      onKeyDown={onClick}\n      aria-hidden=\"true\"\n      className={className}\n    >\n      <img className=\"flagCard\" src={country.flag} alt={country.name} />\n    </div>\n  );\n};\n\nMemoryCard.propTypes = {\n  country: PropTypes.oneOfType([PropTypes.object]).isRequired,\n  onClick: PropTypes.func.isRequired,\n  className: PropTypes.string.isRequired,\n};\n\nexport default MemoryCard;\n","import PropTypes from 'prop-types';\nimport MemoryCard from './MemoryCard';\nimport './memoryGrid.css';\n\nconst MemoryGrid = ({\n  flagArray2,\n  visibleItems,\n  finishedItems,\n  setVisibleItems,\n  checkItems,\n  setStartTimer,\n}) => {\n  return (\n    <div>\n      <div\n        className={`flagsCardsContainer ${\n          flagArray2.length <= 12 ? 'gridEasy' : 'gridMedium'\n        }`}\n      >\n        {flagArray2.map((country, index) => (\n          <MemoryCard\n            // key={() => setKey(key + 1)}\n            country={country}\n            className={`containerImagesMemory ${\n              visibleItems.includes(index) ? 'activeFlagCard' : ''\n            } ${finishedItems.includes(index) ? 'activeFlagCard' : ''}`}\n            onClick={() => {\n              setStartTimer(true);\n              if (!finishedItems.includes(index)) {\n                switch (visibleItems.length) {\n                  case 0:\n                    setVisibleItems([index]);\n                    break;\n                  case 1:\n                    if (visibleItems[0] !== index) {\n                      setVisibleItems(visibleItems.concat(index));\n                      checkItems(visibleItems[0], index);\n                    }\n                    break;\n                  case 2:\n                    setVisibleItems([index]);\n                    break;\n                  default:\n                    setVisibleItems([]);\n                }\n              }\n            }}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nMemoryGrid.propTypes = {\n  flagArray2: PropTypes.arrayOf(PropTypes.object).isRequired,\n  visibleItems: PropTypes.arrayOf(PropTypes.number).isRequired,\n  finishedItems: PropTypes.arrayOf(PropTypes.object).isRequired,\n  setVisibleItems: PropTypes.func.isRequired,\n  setStartTimer: PropTypes.func.isRequired,\n  checkItems: PropTypes.func.isRequired,\n};\n\nexport default MemoryGrid;\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport './memory.css';\nimport { Link } from 'react-router-dom';\nimport Register from '../Register';\nimport Difficult from '../Difficult';\nimport MemoryGrid from '../MemoryGrid';\n\nconst Memory = ({ setShowPresentation }) => {\n  const [data, setData] = useState([]);\n  const [playOnce, setPlayOnce] = useState(true);\n  const [flagArray, setFlagArray] = useState([]);\n  const [flagArray2, setFlagArray2] = useState([]);\n  const [visibleItems, setVisibleItems] = useState([]);\n  const [finishedItems, setFinishedItems] = useState([]);\n  const [timer, setTimer] = useState({ hour: 0, minute: 0, sec: 0 });\n  const [startTimer, setStartTimer] = useState(false);\n  const [winner, setWinner] = useState(false);\n  const [difficult, setDifficult] = useState('medium'); // récupère un tableau de réponses érronées\n  const [playMemoryDifficult, setPlayMemoryDifficult] = useState(true); // affiche le bouton play dans le composant memory\n  const [isHiddenRegister, setIsHiddenRegister] = useState(false); // affiche ou non le modal pour s'enregistrer\n  const limitFlag = [];\n\n  useEffect(() => {\n    setShowPresentation(false);\n  }, []);\n\n  const shuffleArray = (array) => {\n    const array2 = array;\n    for (let i = array2.length - 1; i > 0; i -= 1) {\n      const j = Math.floor(Math.random() * (i + 1));\n      const temp = array2[i];\n      array2[i] = array2[j];\n      array2[j] = temp;\n    }\n    return array2;\n  };\n\n  const sortedCountry = () => {\n    const countryObj = Object.keys(data).map((i) => data[i]);\n\n    shuffleArray(countryObj);\n    const sortedArray = countryObj.sort((a, b) => {\n      return b.population - a.population;\n    });\n\n    if (difficult === 'easy') {\n      setFlagArray(sortedArray.slice(0, 6));\n    } else if (difficult === 'medium') {\n      setFlagArray(sortedArray.slice(0, 12));\n    } else if (difficult === 'hard') {\n      setFlagArray(sortedArray.slice(0, 18));\n    } else {\n      setFlagArray(sortedArray.slice(0, 12));\n    }\n\n    for (let i = 0; i < 2; i += 1) {\n      flagArray.map((el) => limitFlag.push(el));\n    }\n    shuffleArray(limitFlag);\n    setFlagArray2(limitFlag);\n    setPlayOnce(false);\n  };\n\n  useEffect(() => {\n    if (playOnce) {\n      axios\n        .get('https://restcountries.com/v2/all?fields=flag,name')\n        .then((res) => {\n          setData(res.data);\n        });\n    }\n\n    sortedCountry();\n  }, [playOnce, data, winner, difficult, playMemoryDifficult]);\n\n  useEffect(() => {\n    const useInterval =\n      !winner &&\n      startTimer &&\n      setInterval(() => {\n        if (timer.sec > 59) {\n          setTimer({\n            hour: timer.hour,\n            minute: timer.minute + 1,\n            sec: 0,\n          });\n        } else if (timer.minute >= 59 && timer.sec >= 59) {\n          setTimer({\n            hour: timer.hour + 1,\n            minute: 0,\n            sec: 0,\n          });\n        } else {\n          setTimer({\n            hour: timer.hour,\n            minute: timer.minute,\n            sec: timer.sec + 1,\n          });\n        }\n      }, 1000);\n    return () => {\n      clearInterval(useInterval);\n    };\n  }, [timer, startTimer]);\n\n  useEffect(() => {\n    if (\n      finishedItems.length > 0 &&\n      finishedItems.length === flagArray2.length\n    ) {\n      setWinner(true);\n    }\n  }, [finishedItems]);\n\n  const checkItems = (firstIndex, secondIndex) => {\n    if (\n      firstIndex !== secondIndex &&\n      flagArray2[firstIndex].name === flagArray2[secondIndex].name\n    ) {\n      setFinishedItems([...finishedItems, firstIndex, secondIndex]);\n    } else {\n      setTimeout(() => {\n        setVisibleItems([]);\n      }, 600);\n    }\n  };\n\n  const handleCloseRegister = () => {\n    setIsHiddenRegister(!isHiddenRegister);\n  };\n\n  return (\n    <div className={`memoryGameContainer ${winner && 'screenBlack'}`}>\n      <div\n        className={`memoryDifficult ${playMemoryDifficult ? '' : 'isHidden'}`}\n      >\n        <Difficult\n          difficult={difficult}\n          setDifficult={setDifficult}\n          playMemoryDifficult={playMemoryDifficult}\n          setPlayMemoryDifficult={setPlayMemoryDifficult}\n        />\n        <button\n          className=\"btn\"\n          id=\"btnDifficultMemory\"\n          onClick={() => setPlayMemoryDifficult(false)}\n          type=\"button\"\n        >\n          Play\n        </button>\n      </div>\n      {!playMemoryDifficult && (\n        <>\n          <div className=\"memoryGameHeadButtons\">\n            <h2 className=\"timer\">\n              {timer.hour > 0 ? `${timer.hour} : ` : ''} {timer.minute} :{' '}\n              {timer.sec}\n            </h2>\n\n            <div className=\"restartMemoryButtons\">\n              <button\n                type=\"button\"\n                className=\"btn\"\n                onClick={() => {\n                  setVisibleItems([]);\n                  setFinishedItems([]);\n                  setWinner(false);\n                  setStartTimer(false);\n                  setTimer({ hour: 0, minute: 0, sec: 0 });\n                }}\n              >\n                Restart game\n              </button>\n\n              <button\n                type=\"button\"\n                className=\"btn\"\n                onClick={() => {\n                  setVisibleItems([]);\n                  setFinishedItems([]);\n                  setWinner(false);\n                  setStartTimer(false);\n                  setTimer({ hour: 0, minute: 0, sec: 0 });\n                  setPlayMemoryDifficult(true);\n                }}\n              >\n                Change difficulty\n              </button>\n            </div>\n          </div>\n\n          <MemoryGrid\n            flagArray2={flagArray2}\n            visibleItems={visibleItems}\n            setVisibleItems={setVisibleItems}\n            checkItems={checkItems}\n            finishedItems={finishedItems}\n            setStartTimer={setStartTimer}\n          />\n        </>\n      )}\n      {winner && (\n        <div className=\"winnerModal\">\n          <p>You Win !</p>\n          <br />\n          <p>\n            Finished in {timer.hour > 0 ? `${timer.hour} : ` : ''}{' '}\n            {timer.minute} : {timer.sec} seconds\n          </p>\n          <div className=\"containerBtnMemory\">\n            <button\n              type=\"button\"\n              className=\"btn\"\n              onClick={() => {\n                setVisibleItems([]);\n                setFinishedItems([]);\n                setWinner(false);\n                setStartTimer(false);\n                setTimer({ hour: 0, minute: 0, sec: 0 });\n              }}\n            >\n              Restart Game\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn\"\n              onClick={() => {\n                setVisibleItems([]);\n                setFinishedItems([]);\n                setWinner(false);\n                setStartTimer(false);\n                setTimer({ hour: 0, minute: 0, sec: 0 });\n                setPlayMemoryDifficult(true);\n              }}\n            >\n              Change Difficulty\n            </button>\n          </div>\n\n          <Link exact to=\"/\">\n            <button type=\"button\" className=\"btn\" id=\"returnHome\">\n              Home\n            </button>\n          </Link>\n\n          <button\n            className=\"noThanks\"\n            type=\"button\"\n            onClick={handleCloseRegister}\n          >\n            {isHiddenRegister ? 'Register my Score' : 'Not register my score'}\n          </button>\n        </div>\n      )}\n\n      {winner && (\n        <Register\n          timer={timer}\n          setIsHiddenRegister={setIsHiddenRegister}\n          isHiddenRegister={isHiddenRegister}\n          handleCloseRegister={handleCloseRegister}\n        />\n      )}\n    </div>\n  );\n};\n\nMemory.propTypes = {\n  setShowPresentation: PropTypes.func.isRequired,\n};\n\nexport default Memory;\n","import axios from 'axios';\nimport PropTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\nimport './classement.css';\n\nconst Classements = ({ setShowPresentation }) => {\n  const [playOnce, setPlayOnce] = useState(true);\n  const [dataBase, setDataBase] = useState([]); // variable d'état du resultat de l'appel a la BDD\n  const [challengeFilter, setChallengeFilter] = useState('');\n  const [regionFilter, setRegionFilter] = useState('');\n  const [pseudoFilter, setPseudoFilter] = useState('');\n  const [scoreFilter, setScoreFilter] = useState();\n  const [selectGame, setSelectGame] = useState('Memory');\n\n  useEffect(() => {\n    setShowPresentation(false);\n  }, []);\n\n  useEffect(() => {\n    let url = `http://localhost:8000/api/score/`;\n    if (selectGame) {\n      url += `?game_type=${selectGame}`;\n    }\n    if (challengeFilter) {\n      url += `?game=${challengeFilter}`;\n    }\n\n    if (regionFilter) {\n      url += `${challengeFilter ? '&' : '?'}region=${regionFilter}`;\n    }\n\n    if (scoreFilter) {\n      url += `${\n        challengeFilter || regionFilter ? '&' : '?'\n      }score=${scoreFilter}`;\n    }\n    if (pseudoFilter) {\n      url += `?pseudo=${pseudoFilter}`;\n    }\n    if (playOnce) {\n      axios.get(url).then((res) => {\n        setDataBase(res.data);\n        setPlayOnce(false);\n      });\n    }\n  }, [\n    dataBase,\n    challengeFilter,\n    regionFilter,\n    scoreFilter,\n    pseudoFilter,\n    selectGame,\n  ]);\n\n  const handleFilterChallenge = (e) => {\n    setPlayOnce(true);\n    setChallengeFilter(e.target.value);\n  };\n  const handleFilterRegion = (e) => {\n    setPlayOnce(true);\n    setRegionFilter(e.target.value);\n  };\n  const handleFilterScore = (e) => {\n    setPlayOnce(true);\n    setScoreFilter(e.target.value);\n  };\n  const handleFilterPseudo = (e) => {\n    setChallengeFilter('');\n    setRegionFilter('');\n    setScoreFilter('');\n    setPlayOnce(true);\n    setPseudoFilter(e.target.value);\n  };\n\n  return (\n    <div className=\"classement\">\n      <h1>Classements </h1>\n      <div className=\"containerHeadeClassement\">\n        <ul className=\"containerBtnClassement\">\n          <li>\n            <button\n              onClick={() => {\n                setPlayOnce(true);\n                setSelectGame('Quiz');\n              }}\n              type=\"button\"\n              className={`btn btnClassement left ${\n                selectGame === 'Quiz' ? 'selectGameType' : ''\n              } `}\n            >\n              Quiz\n            </button>\n          </li>\n          <li>\n            <button\n              onClick={() => {\n                setPlayOnce(true);\n                setSelectGame('Memory');\n              }}\n              type=\"button\"\n              className={`btn btnClassement middle ${\n                selectGame === 'Memory' ? 'selectGameType' : ''\n              } `}\n            >\n              Memory\n            </button>\n          </li>\n          <li>\n            <button\n              onClick={() => {\n                setPlayOnce(true);\n                setSelectGame('Rapid Quiz');\n              }}\n              type=\"button\"\n              className={`btn btnClassement right ${\n                selectGame === 'Rapid Quiz' ? 'selectGameType' : ''\n              } `}\n            >\n              Rapid Quiz\n            </button>\n          </li>\n        </ul>\n        <ul className=\"headClassement\">\n          <label htmlFor=\"pseudo\">\n            <input\n              type=\"text\"\n              name=\"pseudo\"\n              id=\"pseudo\"\n              placeholder=\"search a pseudo...\"\n              onChange={handleFilterPseudo}\n              className=\"inpt\"\n            />\n          </label>\n          {selectGame !== 'Memory' && (\n            <label htmlFor=\"challenge\">\n              <select\n                name=\"challenge\"\n                id=\"challenge\"\n                onChange={handleFilterChallenge}\n                value={challengeFilter}\n                className=\"inpt\"\n              >\n                <option className=\"optionSelect\" value=\"\">\n                  All\n                </option>\n                <option className=\"optionSelect\" value=\"drapeaux\">\n                  Drapeaux\n                </option>\n                <option className=\"optionSelect\" value=\"capital\">\n                  Capital\n                </option>\n              </select>\n            </label>\n          )}\n          {selectGame !== 'Memory' && (\n            <label htmlFor=\"region\">\n              <select\n                name=\"region\"\n                id=\"region\"\n                onChange={handleFilterRegion}\n                value={regionFilter}\n                className=\"inpt\"\n              >\n                <option value=\"\">All</option>\n                <option value=\"monde\">Monde</option>\n                <option value=\"africa\">Africa</option>\n                <option value=\"america\">America</option>\n                <option value=\"asia\">Asia</option>\n                <option value=\"europe\">Europe</option>\n                <option value=\"oceania\">Oceania</option>\n              </select>\n            </label>\n          )}\n          <label htmlFor=\"score\">\n            <select\n              name=\"score\"\n              id=\"score\"\n              onChange={handleFilterScore}\n              value={scoreFilter}\n              className=\"inpt\"\n            >\n              <option value=\"\">Sort by</option>\n              <option value=\"asc\">Asc</option>\n              <option value=\"desc\">Desc</option>\n            </select>\n          </label>\n        </ul>\n      </div>\n      <div className=\"container__bodyClassement\">\n        <h2>{selectGame}</h2>\n        {/* j'affiche mes infos contenu dans la BDD */}\n        {dataBase.map((el, index) => (\n          <ul\n            key={el.id}\n            className={\n              index % 2 === 0 ? `bodyClassement` : `bodyClassement bgOpacity`\n            }\n          >\n            <li>{el.pseudo}</li>\n            {selectGame !== 'Memory' && <li>{el.game}</li>}\n            {selectGame !== 'Memory' && <li>{el.region}</li>}\n            <li>\n              {el.score}\n              {selectGame === 'Memory' ? 's' : ''}\n            </li>\n          </ul>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nClassements.propTypes = {\n  setShowPresentation: PropTypes.func.isRequired,\n};\n\nexport default Classements;\n","import './help.css';\nimport PropTypes from 'prop-types';\n\nconst Help = ({ content, onClick, userConnected }) => {\n  return (\n    <div className=\"helpcontainer\">\n      <div\n        className=\"help\"\n        onClick={onClick}\n        onKeyDown={onClick}\n        aria-hidden=\"true\"\n      >\n        {content !== 'user' ? (\n          <p>?</p>\n        ) : (\n          <div className=\"contImageUser\">\n            {userConnected.length !== 0 ? (\n              <p className=\"letterConnected\">{userConnected.pseudo[0]}</p>\n            ) : (\n              <img src=\"assets/user.png\" id=\"userImage\" alt=\"logo_user\" />\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nHelp.propTypes = {\n  content: PropTypes.string.isRequired,\n  userConnected: PropTypes.oneOfType([PropTypes.object]),\n  onClick: PropTypes.func,\n};\n\nHelp.defaultProps = {\n  onClick: () => {},\n  userConnected: [{}],\n};\n\nexport default Help;\n","import axios from 'axios';\nimport PropTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\nimport './login.css';\n\nconst Login = ({ searchUser, setSearchUser, setShowLogin, showLogin }) => {\n  const [dataUsers, setDataUsers] = useState([]);\n  const [error, setError] = useState('');\n  const [dataLogin, setDataLogin] = useState('');\n  const [dataPassword, setDataPassword] = useState('');\n  const [hoverLog, setHoverLog] = useState({\n    inpt1: false,\n    inpt2: false,\n  });\n\n  useEffect(() => {\n    if (searchUser) {\n      axios\n        .get(`http://localhost:8000/api/users`)\n        .then((res) => res.data)\n        .then((data) => {\n          const foundUser = data.find((el) => el.pseudo === dataLogin);\n          setDataUsers(foundUser);\n          setSearchUser(false);\n        });\n      if (dataUsers === undefined) {\n        setError('User not found');\n      } else {\n        setError('');\n        if (\n          dataPassword === dataUsers.password &&\n          dataLogin === dataUsers.pseudo\n        ) {\n          setError('');\n          axios.post(`/login`, dataUsers, { withCredentials: true });\n          setShowLogin({ ...showLogin, login: false });\n        } else {\n          setError('Password Invalid');\n        }\n      }\n    }\n  }, [dataUsers, searchUser, error, dataLogin, dataPassword]);\n\n  const handleSignIn = (e) => {\n    e.preventDefault();\n    setSearchUser(true);\n  };\n\n  return (\n    <div className=\"containerFormSubscription\">\n      <div className=\"headerLogin\">\n        <h2>Sign In</h2>\n        <span>X</span>\n      </div>\n\n      <form className=\"login\" onSubmit={handleSignIn}>\n        <label htmlFor=\"loginCon\">\n          <input\n            type=\"text\"\n            name=\"login\"\n            id=\"loginCon\"\n            className=\"inptUsers\"\n            placeholder=\"Login\"\n            onChange={(e) => setDataLogin(e.target.value)}\n            // onMouseOver={() => setHoverLog({ ...hoverLog, inpt1: true })}\n            // onMouseOut={() => setHoverLog({ ...hoverLog, inpt1: false })}\n            onBlur={() => setHoverLog({ ...hoverLog, inpt1: false })}\n            onFocus={() => setHoverLog({ ...hoverLog, inpt1: true })}\n            autoComplete=\"off\"\n            required\n          />\n          <span className={`bottomBorder ${hoverLog.inpt1 && 'activeInpt1'}`} />\n        </label>\n        <label htmlFor=\"passwordCon\">\n          <input\n            type=\"password\"\n            name=\"password\"\n            id=\"passwordCon\"\n            className=\"inptUsers\"\n            placeholder=\"Password\"\n            required\n            onChange={(e) => setDataPassword(e.target.value)}\n            // onMouseOver={() => setHoverLog({ ...hoverLog, inpt2: true })}\n            // onMouseOut={() => setHoverLog({ ...hoverLog, inpt2: false })}\n            onBlur={() => setHoverLog({ ...hoverLog, inpt2: false })}\n            onFocus={() => setHoverLog({ ...hoverLog, inpt2: true })}\n            autoComplete=\"off\"\n          />\n          <span className={`bottomBorder ${hoverLog.inpt2 && 'activeInpt1'}`} />\n        </label>\n        <p>{error}</p>\n        <button type=\"submit\" className=\"btn\">\n          LOGIN\n        </button>\n        <div>\n          <p>\n            <button\n              type=\"button\"\n              className=\"noThanks\"\n              onClick={() =>\n                setShowLogin({ ...showLogin, signup: true, login: false })\n              }\n            >\n              No account ? Create account!\n            </button>\n          </p>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nLogin.propTypes = {\n  searchUser: PropTypes.bool.isRequired,\n  setSearchUser: PropTypes.func.isRequired,\n  setShowLogin: PropTypes.func.isRequired,\n  showLogin: PropTypes.func.isRequired,\n};\n\nexport default Login;\n","import axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './signUp.css';\n\nconst Login = ({ setShowLogin, showLogin }) => {\n  const [pseudo, setPseudo] = useState('');\n  const [mail, setMail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState({\n    errorPseudo: false,\n    errorMail: false,\n    error: '',\n  });\n  //   const [userVerif, setUserVerif] = useState([]);\n  const [hover, setHover] = useState({\n    inpt1: false,\n    inpt2: false,\n    inpt3: false,\n    inpt4: false,\n  });\n  useEffect(() => {\n    let url = `http://localhost:8000/api/users/`;\n    if (pseudo) {\n      url += `?pseudo=${pseudo}`;\n    }\n    if (mail) {\n      url += `?mail=${mail}`;\n    }\n    if (mail && pseudo) {\n      url += `?pseudo=${pseudo}&mail=${mail}`;\n    }\n    axios\n      .get(url)\n      .then((res) => res.data)\n      .then((data) => {\n        console.log(data);\n        if (data.find((el) => el.pseudo === pseudo)) {\n          setError({ ...error, errorPseudo: true });\n        } else if (data.find((el) => el.mail === mail)) {\n          setError({ ...error, errorMail: true });\n        } else {\n          setError({ ...error, errorPseudo: false, errorMail: false });\n        }\n      });\n  }, [pseudo, mail]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // Je submit le formulaire et envoi les data à l'api\n    if (password === confirmPassword) {\n      axios.post('http://localhost:8000/api/users', {\n        pseudo,\n        mail,\n        password,\n        confirmPassword,\n      });\n      setShowLogin({ ...showLogin, signup: false });\n    } else {\n      setError({ ...error, error: 'Your password are not similar!' });\n    }\n  };\n\n  return (\n    <div className=\"containerFormSubscription\">\n      <div className=\"headerLogin\">\n        <h2>Subscription</h2>\n        <span>X</span>\n      </div>\n      <form className=\"login\" onSubmit={handleSubmit}>\n        <label htmlFor=\"login\">\n          <input\n            type=\"text\"\n            name=\"login\"\n            id=\"login\"\n            className=\"inptUsers\"\n            placeholder=\"Pseudo\"\n            onChange={(e) => setPseudo(e.target.value)}\n            // onMouseOver={() => setHover({ ...hover, inpt1: true })}\n            // onMouseOut={() => setHover({ ...hover, inpt1: false })}\n            onFocus={() => setHover({ ...hover, inpt1: true })}\n            onBlur={() => setHover({ ...hover, inpt1: false })}\n            autoComplete=\"off\"\n            required\n          />\n          <span\n            className={`bottomBorder ${hover.inpt1 && 'activeInpt1'} ${\n              error.errorPseudo && 'redError'\n            } `}\n          />\n        </label>\n        <label htmlFor=\"email\">\n          <input\n            type=\"email\"\n            name=\"email\"\n            id=\"email\"\n            className=\"inptUsers\"\n            placeholder=\"E-mail\"\n            onChange={(e) => setMail(e.target.value)}\n            // onMouseOver={() => setHover({ ...hover, inpt2: true })}\n            // onMouseOut={() => setHover({ ...hover, inpt2: false })}\n            onBlur={() => setHover({ ...hover, inpt2: false })}\n            onFocus={() => setHover({ ...hover, inpt2: true })}\n            autoComplete=\"off\"\n            required\n          />\n          <span\n            className={`bottomBorder ${hover.inpt2 && 'activeInpt1'} ${\n              error.errorMail && 'redError'\n            }`}\n          />\n        </label>\n        <label htmlFor=\"password\">\n          <input\n            type=\"password\"\n            name=\"password\"\n            id=\"password\"\n            className=\"inptUsers\"\n            placeholder=\"Password\"\n            onChange={(e) => setPassword(e.target.value)}\n            // onMouseOver={() => setHover({ ...hover, inpt3: true })}\n            // onMouseOut={() => setHover({ ...hover, inpt3: false })}\n            onBlur={() => setHover({ ...hover, inpt3: false })}\n            onFocus={() => setHover({ ...hover, inpt3: true })}\n            autoComplete=\"off\"\n            required\n          />\n          <span className={`bottomBorder ${hover.inpt3 && 'activeInpt1'}`} />\n        </label>\n        <label htmlFor=\"confirmpassword\">\n          <input\n            type=\"password\"\n            name=\"confirmpassword\"\n            id=\"confirmpassword\"\n            className=\"inptUsers\"\n            placeholder=\"Confirm password\"\n            onChange={(e) => setConfirmPassword(e.target.value)}\n            // onMouseOver={() => setHover({ ...hover, inpt4: true })}\n            // onMouseOut={() => setHover({ ...hover, inpt4: false })}\n            onBlur={() => setHover({ ...hover, inpt4: false })}\n            onFocus={() => setHover({ ...hover, inpt4: true })}\n            autoComplete=\"off\"\n            required\n          />\n          <span className={`bottomBorder ${hover.inpt4 && 'activeInpt1'}`} />\n        </label>\n        <p className=\"errorMessage\">{error.error}</p>\n        <button type=\"submit\" className=\"btn\">\n          GO PLAY\n        </button>\n      </form>\n    </div>\n  );\n};\n\nLogin.propTypes = {\n  setShowLogin: PropTypes.func.isRequired,\n  showLogin: PropTypes.func.isRequired,\n};\n\nexport default Login;\n","import PropTypes from 'prop-types';\nimport './profil.css';\n\nconst Profil = ({ user, handleLogOut }) => {\n  return (\n    <div className=\"containerFormSubscription profilContainer\">\n      <div className=\"headerLogin\">\n        <h2>Profil</h2>\n        <span>X</span>\n      </div>\n      <ul className=\"navUser\">\n        <li>\n          <button type=\"button\" className=\"select\">\n            Edit Profil\n          </button>\n        </li>\n        <li>\n          <button type=\"button\">My Score</button>\n        </li>\n        <li>\n          <button type=\"button\">My Chat</button>\n        </li>\n        <li>\n          <button type=\"button\">My Badges</button>\n        </li>\n      </ul>\n      <div className=\"login\">\n        <p>Pseudo: {user.pseudo}</p>\n        <p>Mail: {user.mail}</p>\n        <button className=\"logOut\" type=\"button\" onClick={handleLogOut}>\n          <img src=\"/assets/logout.png\" alt=\"\" />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nProfil.propTypes = {\n  user: PropTypes.oneOfType([PropTypes.object]),\n  handleLogOut: PropTypes.func.isRequired,\n};\n\nProfil.defaultProps = {\n  user: [{}],\n};\n\nexport default Profil;\n","import { useEffect, useState } from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport axios from 'axios';\nimport Logo from './Logo';\nimport Help from './Help';\nimport './header.css';\nimport Login from './Login';\nimport SignUp from './SignUp';\nimport Profil from './Profil';\n\nconst Header = () => {\n  const [showLogin, setShowLogin] = useState({\n    login: false,\n    signup: false,\n    profil: false,\n  });\n  const [userConnected, setUserConnected] = useState([]);\n  const [searchUser, setSearchUser] = useState(false);\n  const [errorGetData, setErrorGetData] = useState('');\n  console.log(userConnected.length);\n  useEffect(() => {\n    const url = `http://localhost:8000/login`;\n    axios\n      .get(url, { withCredentials: true })\n      .then((res) => res.data)\n      .then((data) => setUserConnected(data))\n      .catch((err) => setErrorGetData(err.response.status));\n  }, [searchUser, showLogin]);\n\n  const handleLogOut = () => {\n    axios\n      .post('/logout', { withCredentials: true })\n      .then((res) => {\n        console.log(res);\n        setShowLogin({ ...showLogin, profil: false });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  return (\n    <div className=\"header\">\n      {(showLogin.login || showLogin.profil || showLogin.signup) && (\n        <span\n          id=\"screenBackBlack\"\n          onClick={() =>\n            setShowLogin({ login: false, profil: false, signup: false })\n          }\n          onKeyDown={() =>\n            setShowLogin({ login: false, profil: false, signup: false })\n          }\n          aria-hidden=\"true\"\n        />\n      )}\n      {showLogin.login && userConnected === '' && (\n        <Login\n          setSearchUser={setSearchUser}\n          searchUser={searchUser}\n          setShowLogin={setShowLogin}\n          showLogin={showLogin}\n        />\n      )}\n      {showLogin.signup && (\n        <SignUp setShowLogin={setShowLogin} showLogin={showLogin} />\n      )}\n      {showLogin.profil && userConnected && (\n        <Profil user={userConnected} handleLogOut={handleLogOut} />\n      )}\n      <li>\n        <NavLink activeClassName=\"active\" exact to=\"/\">\n          Home\n        </NavLink>\n      </li>\n      <li>\n        <NavLink activeClassName=\"active\" to=\"/Quiz\">\n          Quiz\n        </NavLink>\n      </li>\n      <li>\n        <NavLink activeClassName=\"active\" to=\"/Memory\">\n          Memory\n        </NavLink>\n      </li>\n\n      <div className=\"logoHeader\">\n        <Link className=\"nohover\" to=\"/\">\n          <Logo />\n        </Link>\n      </div>\n\n      <li>\n        <NavLink activeClassName=\"active\" to=\"/Culture\">\n          Culture\n        </NavLink>\n      </li>\n      <li>\n        <NavLink activeClassName=\"active\" to=\"/Classements\">\n          Classements\n        </NavLink>\n      </li>\n      <li className=\"contBtnHeader scale\" id=\"nohover\">\n        <Help content=\"?\" />\n        <Help\n          content=\"user\"\n          userConnected={userConnected}\n          onClick={() =>\n            userConnected === '' || errorGetData\n              ? setShowLogin({ ...showLogin, login: true })\n              : setShowLogin({ ...showLogin, profil: true })\n          }\n        />\n      </li>\n    </div>\n  );\n};\n\nexport default Header;\n","import { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Difficult from '../Difficult';\nimport Answers from '../Answers';\nimport Questions from '../Questions';\nimport './quiz.css';\nimport ResultQuiz from '../ResultQuiz';\nimport './quizRapid.css';\n\nconst QuizRapid = () => {\n  const [data, setData] = useState([]); // recupère le premier tableau de l'appel api\n  const [playOnce, setPlayOnce] = useState(true); // gere l'appel API pour eviter l'appel en boucle\n  const [sortedData, setSortedData] = useState([]); // tableau de l'appel api trié par ordre de population\n  const [sliceVal1, setSliceVal1] = useState(0); // sliceVal1 et 2 incrementent le slice pour me permettre d'afficher les questions une par une\n  const [sliceVal2, setSliceVal2] = useState(1);\n  const [countQuestion, setCountQuestion] = useState(0); // j'enregistre le nombre de question au click pour les afficher\n  const [isHidden, setIsHidden] = useState('difficult'); // permet d'afficher ou non un composant\n  const [total, setTotal] = useState(1); // permet de récupérer le score du jeu\n  const [resultAnswer, setResultAnswer] = useState([]); // affiche la réponse selectionné\n  const [resultQuestion, setResultQuestion] = useState([]); // affiche l'objet de la question affiché\n  const [capitalQuestion, setCapitalQuestion] = useState(''); // affiche l'objet selectionné de la question\n  const [showResponse, setShowResponse] = useState([]); // récupère un tableau de réponses érronées\n  const [difficult, setDifficult] = useState('medium'); // récupère la difficultée\n  const arrayLength = sortedData.length;\n  const [challengeSwitch, setChallengeSwitch] = useState('Capital');\n  const randomNumber = Math.floor(Math.random() * 10);\n\n  // Applique un random sur les tableaux en parametre\n  const shuffleArray = (array) => {\n    const array2 = array;\n    for (let i = array2.length - 1; i > 0; i -= 1) {\n      const j = Math.floor(Math.random() * (i + 1));\n      const temp = array2[i];\n      array2[i] = array2[j];\n      array2[j] = temp;\n    }\n    return array2;\n  };\n\n  const sortedCountry = () => {\n    const countryObj = Object.keys(data).map((i) => data[i]);\n    const sortedArray = countryObj.sort((a, b) => {\n      // permet d'appliquer une difficultée au jeu\n      return b.population - a.population;\n    });\n\n    if (difficult === 'easy') {\n      setSortedData(sortedArray.slice(0, 33));\n    } else if (difficult === 'medium') {\n      setSortedData(sortedArray.slice(100, 133));\n    } else if (difficult === 'hard') {\n      setSortedData(sortedArray.slice(210, 243));\n    } else {\n      setSortedData(sortedArray);\n    }\n  };\n\n  useEffect(() => {\n    if (playOnce) {\n      axios\n        .get(\n          `https://restcountries.com/v2/all?fields=name,capital,translations,flag,population`\n        )\n        .then((res) => {\n          setData(res.data);\n          setPlayOnce(false);\n        });\n    }\n    sortedCountry();\n  }, [data, playOnce, difficult]);\n\n  useEffect(() => {\n    setChallengeSwitch(randomNumber % 2 === 0 ? 'Capital' : 'Drapeaux');\n  }, [randomNumber, challengeSwitch]);\n\n  const answerRandom = sortedData.slice(sliceVal1, sliceVal2 + 3);\n  shuffleArray(answerRandom);\n\n  const nextQuestion = () => {\n    setCountQuestion(countQuestion + 1);\n    setCapitalQuestion(resultQuestion);\n    if (countQuestion < arrayLength - 4) {\n      // si le nombre de click et inferieure à la lg du tableau - 4, je compare les résultats\n      if (\n        resultAnswer === capitalQuestion.capital ||\n        resultAnswer === capitalQuestion.flag\n      ) {\n        setTotal(total + 1);\n      } else {\n        let result = []; // créer un nouveau tableau que j'ajoute dans mon state showResponse pour afficher la correction\n        result = {\n          name: capitalQuestion.name,\n          translation: capitalQuestion.translations,\n          capital: capitalQuestion.capital,\n          answer: resultAnswer,\n          flag: capitalQuestion.flag,\n        };\n        setShowResponse([...showResponse, result]);\n      }\n      setSliceVal1(sliceVal1 + 1);\n      setSliceVal2(sliceVal2 + 1); // je passe à la question suivante\n    } else {\n      setTotal(total + 1);\n      setIsHidden('result');\n    }\n  };\n\n  return (\n    <div>\n      <h2>Rapid quiz</h2>\n      <div className=\"divquizrapid\">\n        <div\n          className=\"containerDifficult\"\n          id={isHidden === 'difficult' ? '' : 'hidden'}\n        >\n          <Difficult setDifficult={setDifficult} difficult={difficult} />\n          <button\n            type=\"button\"\n            className=\"btn btnQuizRapid\"\n            onClick={() => setIsHidden('quizRapid')}\n          >\n            Play\n          </button>\n        </div>\n\n        <div className=\"quizMain\" id={isHidden === 'quizRapid' ? '' : 'hidden'}>\n          <ul className=\"quizGame\">\n            {sortedData.slice(sliceVal1, sliceVal2).map((country) => (\n              <Questions\n                country={country}\n                key={country.name}\n                nbQuestion={sliceVal1}\n                arrayLength={arrayLength}\n                setResultQuestion={setResultQuestion}\n                challengeSwitch={challengeSwitch}\n              />\n            ))}\n          </ul>\n          <ul className=\"answers\">\n            {answerRandom.map((country) => (\n              <Answers\n                country={country}\n                key={country.name}\n                nextQuestion={nextQuestion}\n                setResultAnswer={setResultAnswer}\n                challengeSwitch={challengeSwitch}\n              />\n            ))}\n          </ul>\n        </div>\n        <div\n          className=\"resultQuizContainer\"\n          id={isHidden === 'result' ? '' : 'hidden'}\n        >\n          <ResultQuiz\n            total={total}\n            key={capitalQuestion.name}\n            showResponse={showResponse}\n            challengeSwitch={challengeSwitch}\n          />\n          <div className=\"divBtnQuizRapid\">\n            <button\n              type=\"button\"\n              className={`btn ${\n                challengeSwitch === 'Capital' ? 'help scale' : ''\n              }`}\n              onClick={() => setChallengeSwitch('Capital')}\n            >\n              Capitals\n            </button>\n            <button\n              type=\"button\"\n              className={`btn ${\n                challengeSwitch === 'Drapeaux' ? 'help scale' : ''\n              }`}\n              onClick={() => setChallengeSwitch('Drapeaux')}\n            >\n              Flags\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default QuizRapid;\n","import React, { useState } from 'react';\nimport { Switch, Route, BrowserRouter } from 'react-router-dom';\nimport Culture from './components/pages/Culture';\nimport Quiz from './components/pages/Quiz';\nimport Home from './components/pages/Home';\nimport Memory from './components/pages/Memory';\nimport Classements from './components/pages/Classements';\nimport Header from './components/Header';\nimport QuizRapid from './components/pages/QuizRapid';\nimport './app.css';\n\nconst App = () => {\n  const [showPresentation, setShowPresentation] = useState(true);\n  return (\n    <div className={showPresentation ? 'app' : ''}>\n      <BrowserRouter>\n        <Header />\n        <Switch>\n          <Route\n            path=\"/\"\n            exact\n            component={() => (\n              <Home\n                showPresentation={showPresentation}\n                setShowPresentation={setShowPresentation}\n              />\n            )}\n          />\n          <Route\n            path=\"/Quiz\"\n            exact\n            component={() => <Quiz setShowPresentation={setShowPresentation} />}\n          />\n          <Route\n            path=\"/Memory\"\n            exact\n            component={() => (\n              <Memory setShowPresentation={setShowPresentation} />\n            )}\n          />\n          <Route\n            path=\"/Classements\"\n            exact\n            component={() => (\n              <Classements setShowPresentation={setShowPresentation} />\n            )}\n          />\n          <Route\n            path=\"/Culture\"\n            exact\n            component={() => (\n              <Culture setShowPresentation={setShowPresentation} />\n            )}\n          />\n          <Route\n            path=\"/QuizRapid\"\n            exact\n            component={() => (\n              <QuizRapid setShowPresentation={setShowPresentation} />\n            )}\n          />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './style.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}